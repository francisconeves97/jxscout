name: ðŸš€ Release
on:
  workflow_dispatch:

env:
  GO_VERSION: 1.23
  BUN_VERSION: 1.1.30
  PROJECT_NAME: jxscout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Get version
        id: get_version
        run: echo "VERSION=$(grep 'const Version =' cmd/jxscout/main.go | awk '{print $4}' | tr -d '"')" >> $GITHUB_OUTPUT

      - name: Build Bun package
        run: |
          bun install --frozen-lockfile
          bun build pkg/chunk-discoverer/index.ts --outfile internal/modules/chunk-discoverer/chunk-discoverer.js --target bun --minify

      - name: Build for multiple platforms
        run: |
          GOOS=linux GOARCH=386 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_linux_386/jxscout cmd/jxscout/main.go
          GOOS=linux GOARCH=amd64 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_linux_amd64/jxscout cmd/jxscout/main.go
          GOOS=linux GOARCH=arm64 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_linux_arm64/jxscout cmd/jxscout/main.go
          GOOS=darwin GOARCH=amd64 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_macOS_amd64/jxscout cmd/jxscout/main.go
          GOOS=darwin GOARCH=arm64 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_macOS_arm64/jxscout cmd/jxscout/main.go
          GOOS=windows GOARCH=amd64 go build -o dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_windows_amd64/jxscout.exe cmd/jxscout/main.go

      - name: Create ZIP archives
        run: |
          cd dist
          for dir in ${{ env.PROJECT_NAME }}_*; do
            zip -r "${dir}.zip" "$dir"
            rm -rf "$dir"
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum ${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_linux_*.zip > ${{ env.PROJECT_NAME }}-linux-checksums.txt
          sha256sum ${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_macOS_*.zip > ${{ env.PROJECT_NAME }}-mac-checksums.txt
          sha256sum ${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_windows_*.zip > ${{ env.PROJECT_NAME }}-windows-checksums.txt

      - name: Create source archives
        run: |
          git archive --format=zip --output=dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_source.zip HEAD
          git archive --format=tar.gz --output=dist/${{ env.PROJECT_NAME }}_${{ steps.get_version.outputs.VERSION }}_source.tar.gz HEAD

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
